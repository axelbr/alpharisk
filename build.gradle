import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'at.ac.tuwien.ifs.sge.agent'
version '1.0'

java {
    withSourcesJar()
}

sourcesJar {
    exclude("at/ac/tuwien/ifs/sge/agent/alphabetaagent")
    exclude("at/ac/tuwien/ifs/sge/agent/mctsagent")
    exclude("at/ac/tuwien/ifs/sge/agent/randomagent")
    exclude("at/ac/tuwien/ifs/sge/agent/risk")
}

repositories {
    mavenCentral()
    maven {
        url "https://repository.apache.org/snapshots"
    }
}

dependencies {
    //implementation group: 'at.ac.tuwien.ifs.sge', name: 'sge', version: '1.0.2'
    //implementation group: 'at.ac.tuwien.ifs.sge', name: 'sge-risk', version: '1.0.2'
    implementation 'com.eclipsesource.j2v8:j2v8_linux_x86_64:4.6.0'
    implementation 'guru.nidi:graphviz-java:0.18.1'
    //Apache Batik core module for converting SVG to other formats
    implementation 'org.apache.xmlgraphics:batik-transcoder:1.14'

    //Modules required for PNG and JPEG output
    runtimeOnly 'org.apache.xmlgraphics:batik-codec:1.14'
    implementation fileTree(dir: 'environment', include: ['*.jar'])
    implementation("com.google.guava:guava:31.0.1-jre")
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-configuration2:2.7'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.32'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.32'
}



shadowJar {
    archiveClassifier.set("dev")
    destinationDirectory = file('environment/agents')

    manifest {
        attributes('Sge-Type': 'agent',
                'Agent-Class': 'at.ac.tuwien.ifs.sge.agent.alpharisk.AlphaRiskAgent',
                'Agent-Name': 'AlphaRiskAgent')
    }

    exclude("at/ac/tuwien/ifs/sge/agent/alphabetaagent")
    exclude("at/ac/tuwien/ifs/sge/agent/mctsagent")
    exclude("at/ac/tuwien/ifs/sge/agent/randomagent")
    exclude("at/ac/tuwien/ifs/sge/agent/risk")
    minimize()
}

def conf = 'RAVE-MCter'

task customFatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.WARN
    from(sourceSets.main.output)
    archiveClassifier.set(conf)
    destinationDirectory=file('environment/agents')

    manifest {
        attributes('Sge-Type': 'agent',
                'Agent-Class': 'at.ac.tuwien.ifs.sge.agent.alpharisk.AlphaRiskAgent',
                'Agent-Name': 'AlphaRisk'+conf)
    }

    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude("at/ac/tuwien/ifs/sge/agent/alphabetaagent")
    exclude("at/ac/tuwien/ifs/sge/agent/mctsagent")
    exclude("at/ac/tuwien/ifs/sge/agent/randomagent")
    exclude("at/ac/tuwien/ifs/sge/agent/risk")
    with jar
}